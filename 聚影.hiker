海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@聚影@{"last_chapter_rule":"","title":"聚影","author":"","url":"hiker://empty##fypage","version":16,"col_type":"movie_3","class_name":"","type":"video","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nif(config.聚影){\n    require(config.聚影);\n    yiji();\n}else{\n    $.require('ghproxy').proxyPage();\n}","search_url":"hiker://empty##**##fypage","group":"①推荐","searchFind":"js:\nrequire(config.聚影);\nsousuo()","detail_col_type":"movie_3","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"/*<$>\n@include start\nimportGM\n@include end\n<$>*/\n\nif (!config.聚影) {\n    let srcHome = $.require('ghproxy').getSrcHome();\n    if(srcHome){\n        initConfig({\n            聚影: srcHome\n        });\n        setPublicItem('聚影', srcHome);\n    }\n}\n//by.帅√`人才","pages":"[{\"col_type\":\"movie_3\",\"name\":\"配置参数\",\"path\":\"config\",\"rule\":\"js:\\nlet home = $.require('ghproxy').getSrcHome();\\n$.exports = {\\n    version: 16,\\n    依赖: home\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"云口令导入\",\"path\":\"import\",\"rule\":\"js:\\nfunction cloudimport() {\\n    let JYCode = fetch(\\\"hiker://home@聚影\\\");\\n    if (JYCode) {\\n        writeFile(\\\"hiker://files/_cache/Juying2/cloudimport.txt\\\", input);\\n        return \\\"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?rule=聚影\\\"\\n    } else {\\n        return \\\"toast://没有聚影小程序，要是新版哦\\\";\\n    }\\n}\\n$.exports = cloudimport();\"},{\"col_type\":\"movie_3\",\"name\":\"代理管理\",\"path\":\"ghproxy\",\"rule\":\"js:\\nlet cfgfile = \\\"hiker://files/rules/Src/Juying2/config.json\\\";\\nlet Juconfig = {};\\nlet Jucfg = fetch(cfgfile);\\nif (Jucfg != \\\"\\\") {\\n    eval(\\\"Juconfig=\\\" + Jucfg + \\\";\\\");\\n}\\nlet proxylist = Juconfig['ghproxy'] || [];\\n\\nfunction getproxy() {\\n    let list = proxylist.filter(v => !v.stop).map(it => it.url);\\n    if (list.length == 0) {\\n        try {\\n            let ghurls = 'https://github-mirror.xiaoxuan6.me/api/urls';\\n            list = JSON.parse(fetch(ghurls)).data.map(url => {\\n                url = url.trim();\\n                if (!url.endsWith(\\\"/\\\")) {\\n                    url = url + \\\"/\\\";\\n                }\\n                return url;\\n            });\\n            setproxy(list);\\n        } catch (e) {}\\n    }\\n    return list;\\n}\\n\\nfunction getProxyUrl() {\\n    let proxy = getMyVar('SrcJu_proxyUrl', '');\\n    if (proxy == '') {\\n        let ghlist = getproxy();\\n        for (let item of ghlist) {\\n            let data = JSON.parse(fetch(item, {\\n                withStatusCode: true,\\n                timeout: 3000,\\n            }));\\n            if (data.statusCode == 200) {\\n                putMyVar('SrcJu_proxyUrl', item);\\n                proxy = item;\\n                break;\\n            } else {\\n                setproxy(item, 0);\\n            }\\n        }\\n    }\\n    return proxy;\\n}\\n\\nfunction getSrcHome() {\\n    let srcHome = getItem('依赖', '');\\n    if(srcHome){\\n        if(srcHome.startsWith('https://raw.github')){\\n            let proxyUrl = getProxyUrl();\\n            srcHome = proxyUrl + srcHome;\\n        }\\n        try{\\n            let verify = fc(srcHome.replace(/[^/]*$/,'') + 'SrcVerify', 168);\\n            if(verify=='ok'){\\n                return srcHome;\\n            }\\n        }catch(e){}\\n    }\\n    try {\\n        let proxyUrl = getProxyUrl();\\n        require(proxyUrl + 'https://raw.githubusercontent.com/src48597962/hk/master/JyRequire.js', {\\n            timeout: 3000\\n        });\\n        let relyfile = getRely();\\n        if (relyfile) {\\n            srcHome = relyfile.includes('raw.github') ? proxyUrl + relyfile : relyfile;\\n            setItem('依赖', srcHome);\\n            log('获取代码库成功>' + srcHome);\\n        }\\n    } catch (e) {\\n        log('获取代码库异常>' + e.message);\\n    }\\n    return srcHome;\\n}\\n\\nfunction setproxy(input, zt) {\\n    let list = [];\\n    if ($.type(input) == \\\"string\\\" && input.trim()) {\\n        list.push(input.trim());\\n    } else if ($.type(input) == \\\"array\\\") {\\n        list = input;\\n    }\\n\\n    if (list.length > 0) {\\n        list.forEach(url => {\\n            let index = proxylist.findIndex(it => it.url == url);\\n            if (index == -1) {\\n                proxylist.push({\\n                    url: url\\n                });\\n            } else if (zt == 1) {\\n                delete proxylist[index].stop;\\n            } else if (zt == 0) {\\n                proxylist[index].stop = 1;\\n            } else if (zt == 2) {\\n                proxylist = proxylist.filter(v => v.url != url);\\n            }\\n        })\\n        Juconfig['ghproxy'] = proxylist;\\n        writeFile(cfgfile, JSON.stringify(Juconfig));\\n    }\\n}\\n\\nfunction proxyPage() {\\n    setPageTitle('启动代理管理');\\n    let d = [];\\n    d.push({\\n        title: '选择代码库获取方式',\\n        desc: '有代理：' + proxylist.length + '，有效的：' + getproxy().length,\\n        url: $(['方式一：自动获取代码库', '方式二：手工指定代码库'], 1, '指定聚影代码获取方式').select(() => {\\n            if (MY_INDEX == 0) {\\n                return \\\"toast://添加完有效的github加速代理后返回刷新\\\";\\n            } else if (MY_INDEX == 1) {\\n                return $(getItem('依赖', ''), \\\"指定聚影代码仓地址\\\").input(() => {\\n                    input = input.replace(/\\\\s+/g, '');\\n                    if (!input.startsWith('http') || !input.endsWith('SrcJuying.js')) {\\n                        return \\\"toast://输入有误\\\";\\n                    }\\n                    setItem('依赖', input);\\n                    refreshPage();\\n                    return \\\"toast://已设置\\\";\\n                })\\n            }\\n        }),\\n        col_type: \\\"text_1\\\"\\n    });\\n    d.push({\\n        title: '添加',\\n        col_type: 'input',\\n        desc: '输入github加速代理地址',\\n        url: $.toString(() => {\\n            input = input.trim();\\n            if (input && input.includes(\\\"/https\\\")) {\\n                input = input.split(\\\"/http\\\")[0] + \\\"/\\\";\\n            }\\n            if (!input.startsWith('http') || input.includes(\\\"githubusercontent.com\\\") || !input.endsWith(\\\"/\\\")) {\\n                return \\\"toast://输入错误，请输入正确的github加速代理\\\";\\n            }\\n            $.require('ghproxy').setproxy(input);\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        extra: {\\n            titleVisible: true\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"line\\\"\\n    });\\n    proxylist.reverse();\\n    proxylist.forEach(it => {\\n        d.push({\\n            title: it.stop ? '‘‘’’<font color=\\\"#f20c00\\\">' + it.url + '</font>' : it.url,\\n            url: $([it.stop ? \\\"启用\\\" : \\\"停用\\\", \\\"删除\\\", \\\"复制\\\", \\\"检测\\\"], 1, \\\"\\\").select((url) => {\\n                if (input == \\\"启用\\\") {\\n                    $.require('ghproxy').setproxy(url, 1);\\n                } else if (input == \\\"停用\\\") {\\n                    $.require('ghproxy').setproxy(url, 0);\\n                } else if (input == \\\"删除\\\") {\\n                    $.require('ghproxy').setproxy(url, 2);\\n                } else if (input == \\\"复制\\\") {\\n                    copy(url);\\n                    return \\\"hiker://empty\\\";\\n                } else if (input == \\\"检测\\\") {\\n                    function getproxy(proxy) {\\n                        let url = 'https://raw.githubusercontent.com/src48597962/hk/master/verify';\\n                        let content = fetch(proxy+url, {timeout:5000});\\n                        if (content == 'ok') {\\n                            return proxy;\\n                        }\\n                        return '';\\n                    }\\n                    let ghproxy = getproxy(url);\\n                    if (ghproxy) {\\n                        return 'toast://成功';\\n                    } else {\\n                        return 'toast://失败';\\n                    }\\n                }\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, it.url),\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                id: it.url\\n            }\\n        });\\n    })\\n    setResult(d);\\n}\\n$.exports = {\\n    getproxy: getproxy,\\n    setproxy: setproxy,\\n    proxyPage: proxyPage,\\n    getProxyUrl: getProxyUrl,\\n    getSrcHome: getSrcHome\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"导入确认页\",\"path\":\"importConfirm\",\"rule\":\"js:\\nlet srcHome = getPublicItem('聚影','');\\nif(!srcHome){\\n    eval(JSON.parse(fetch(\\\"hiker://home@聚影\\\")).preRule);\\n    srcHome = config.聚影;\\n}\\nif (!config.聚影) {\\n    initConfig({\\n        聚影: srcHome\\n    });\\n}\\nlet extfile = getParam(\\\"extfile\\\",\\\"\\\");\\n\\nrequire(srcHome.replace(/[^/]*$/,'') + 'SrcJySet.js');\\nimportConfirm(extfile);\"},{\"col_type\":\"movie_3\",\"name\":\"intent#js#\",\"path\":\"intent\",\"rule\":\"js:\\nfunction jsimport() {\\n    return \\\"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?extfile=\\\" + input;\\n}\\n$.exports = jsimport();\"},{\"col_type\":\"movie_3\",\"name\":\"importGM\",\"path\":\"importGM\",\"rule\":\"js:\\nlet home = $.require('ghproxy').getSrcHome();\\nif (home) {\\n    let p = home.replace(/[^/]*$/, '') + \\\"plugins/globalmap.js\\\";\\n    $.importRequire(p);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"聚影解析\",\"path\":\"parseUrl\",\"rule\":\"function aytmParse(input) {\\n    let srcHome = getPublicItem('聚影', '');\\n    if (!srcHome) {\\n        return \\\"toast://需要先导入聚影新版本并打开一次\\\";\\n    }\\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcParseS.js');\\n    log(\\\"聚影解析开始>>>\\\");\\n    let playUrl = SrcParseS.聚影(input);\\n    log(\\\"聚影解析结束>>>\\\");\\n    return playUrl;\\n}\\nlet lookSet = $(\\\"#noLoading#\\\").lazyRule(() => {\\n    let srcHome = getPublicItem('聚影', '');\\n    if (!srcHome) {\\n        return \\\"toast://需要先导入聚影新版本并打开一次\\\";\\n    }\\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcJyPublic.js');\\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((srcHome) => {\\n        require(srcHome.replace(/[^/]*$/, '') + 'SrcJyMenu.js');\\n        lookset();\\n    },srcHome)\\n})\\n\\n$.exports.解析 = aytmParse;\\n$.exports.设置 = lookSet;\"}]","icon":"https://s21.ax1x.com/2025/07/11/pVlSDSK.png","proxy":""}